# Ultralytics 🚀 AGPL-3.0 License - https://ultralytics.com/license

# Ultralytics YOLO11-seg dual modal with ConcatCompress fusion
# Model docs: https://docs.ultralytics.com/models/yolo11

# Parameters
nc: 3 # number of classes
ch_b: 3 # input channels for blue light
ch_w: 3 # input channels for white light
scales: # model compound scaling constants, i.e. 'model=yolo11n-seg.yaml' will call yolo11-seg.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 203 layers, 2876848 parameters, 2876832 gradients, 10.5 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 203 layers, 10113248 parameters, 10113232 gradients, 35.8 GFLOPs
  m: [0.50, 1.00, 512] # summary: 253 layers, 22420896 parameters, 22420880 gradients, 123.9 GFLOPs
  l: [1.00, 1.00, 512] # summary: 379 layers, 27678368 parameters, 27678352 gradients, 143.0 GFLOPs
  x: [1.00, 1.50, 512] # summary: 379 layers, 62142656 parameters, 62142640 gradients, 320.2 GFLOPs

# YOLO11 blue light backbone
backbone_b:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 2, C3k2, [256, False, 0.25]]
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 2, C3k2, [512, False, 0.25]]
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
  - [-1, 2, C3k2, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32
  - [-1, 2, C3k2, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]] # 9
  - [-1, 2, C2PSA, [1024]] # 10

# YOLO11 white light backbone
backbone_w:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 11-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 12-P2/4
  - [-1, 2, C3k2, [256, False, 0.25]]
  - [-1, 1, Conv, [256, 3, 2]] # 14-P3/8
  - [-1, 2, C3k2, [512, False, 0.25]]
  - [-1, 1, Conv, [512, 3, 2]] # 16-P4/16
  - [-1, 2, C3k2, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]] # 18-P5/32
  - [-1, 2, C3k2, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]] # 20
  - [-1, 2, C2PSA, [1024]] # 21

# YOLO11 dual modal head with ConcatCompress fusion
head:  
  # 方案1：ConcatCompress融合 - 拼接后自动压缩到单模态通道数
  - [[4, 15], 1, ConcatCompress, []] # 22 P3融合: [768, 768]->768 (自动)
  - [[6, 17], 1, ConcatCompress, []] # 23 P4融合: [768, 768]->768 (自动)
  - [[10, 21], 1, ConcatCompress, []] # 24 P5融合: [768, 768]->768 (自动)
  
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 25
  - [[-1, 23], 1, Concat, [1]] # 26 cat backbone P4
  - [-1, 2, C3k2, [512, False]] # 27

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 28
  - [[-1, 22], 1, Concat, [1]] # 29 cat backbone P3
  - [-1, 2, C3k2, [256, False]] # 30 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]] # 31
  - [[-1, 27], 1, Concat, [1]] # 32 cat head P4
  - [-1, 2, C3k2, [512, False]] # 33 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]] # 34
  - [[-1, 24], 1, Concat, [1]] # 35 cat head P5
  - [-1, 2, C3k2, [1024, True]] # 36 (P5/32-large)

  - [[30, 33, 36], 1, Segment, [nc, 32, 256]] # Detect(P3, P4, P5) 